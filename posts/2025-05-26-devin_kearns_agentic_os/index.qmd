---
title: "Devin Kearns: Agentic Operating Systems' are the FUTURE of AI & Business"
description: |
  Devin Kearns discusses the evolution of AI agents, introducing the concept of Agentic Operating Systems (Agentic OS) as the future of AI and business. He outlines three phases of AI agent development, defines Agentic OS, and envisions a future where personal and business agents operate autonomously within interconnected data sandboxes.
categories:
  - "AI in Business"
date: 2025-05-26
image: devin_kearns_agentic_os.png
---

**:Model Instructions:** 


  
**:You:** please summarize this video in detail

[![Why 'Agentic Operating Systems' are the FUTURE of AI & Business](https://i.ytimg.com/vi/CxDjIeINGQk/maxresdefault.jpg)](https://www.youtube.com/watch?v=CxDjIeINGQk)

---

**:01JR0E39PYK7YKH4FBR4W00CMV::gemini-2.5-flash-preview-04-17:** Here is a detailed summary of the YouTube video titled "Why 'Agentic Operating Systems' are the FUTURE of AI & Business" by Devin Kearns:

The video presents the author's thesis that **Agentic Operating Systems (Agentic OS)** represent the near and distant future of AI and business. He charts the progression of AI agent technology in three versions:

1.  **V1: AI Automation:** This phase, prominent about two years prior to the video, involved building tools for simple, single-use tasks like inbox management, content generation, and report creation. Devin argues these were more akin to automations with LLMs added rather than true, autonomous agents. There was friction in the developer community regarding the definition of an "agent" at this stage.
2.  **V2: Vertical/Singular AI Agents:** Inspired by the vertical SaaS model (software for specific industries, e.g., software for car dealerships), this stage involves creating specific AI agents for specific roles or tasks (e.g., an SDR agent, a customer support agent). While this is a current area of focus and business opportunity, Devin sees it as another step towards the ultimate goal, potentially limited by the anthropomorphizing of traditional roles. The focus should shift to the *tasks* involved rather than mapping directly to human job titles.
3.  **V3: Agentic OS:** Devin believes this is the next major phase, arriving potentially this year and next year. This is the step that brings us closer to the "omni-capable, omnipresent" AI vision.

**What is an Agentic Operating System?**

An Agentic OS is defined as an agentic system that operates within a **data sandbox**. Key characteristics:

*   **Data Sandbox:** It has full, contextual, real-time access to the specific data it needs to operate.
*   **Tools:** It has access to the necessary tools to execute tasks and workflows.
*   **Autonomy:** It can operate reliably, effectively, and autonomously, requiring less direct human guidance than previous versions.

Devin argues that the *technology* to build Agentic OS is largely here, but the **UI/UX** for humans to effectively interact with, track, review, and provide human-in-the-loop guidance for these autonomous systems is still missing. He likens the need to the initial lack of a simple interface for early LLMs before ChatGPT popularized the chat format â€“ the technology existed, but the accessible interface was needed for mass adoption. The ideal is a Jarvis-like personal AI.

**The Future Vision: A Web of Agents**

Devin envisions a future structure:

*   **Personal Agents:** Every individual will have their own personal AI agent, much like having a smartphone today. This agent is trained on the individual's **personal data sandbox** (conversations, emails, messages, health data, etc.) and acts as an extension or "second brain." This personal agent serves as the primary interface to connect with the outside digital world.
*   **Business Agentic Operating Systems:** Businesses will have a centralized Agentic OS operating within their **proprietary data sandbox** and workflows. Employees will interact with the business OS via their personal agents, with appropriate permissions.
*   **Interconnected Ecosystem:** Personal agents and business AOs will connect to the internet, other agents/AOs, paywall data, tools, algorithms, and potentially even physical machines (robots). This creates a "web" of connected systems, possibly leveraging protocols like blockchain for secure data exchange and function execution. The AI/Agentic OS becomes the new digital "middleman."

He draws an analogy to the smartphone: A smartphone holds our personal data (sandbox), provides communication (channel), connects us to external tools (apps, internet), and facilitates actions. Humans, with their pre-trained knowledge (memory, experience, skills), use the phone to interact with the world based on their "purpose" (their goals/prompts).

**What LLMs Need to Become True Agents:**

To achieve the Agentic OS future, LLMs need:

1.  Real-time contextual data access.
2.  Tooling capabilities to execute actions/workflows.
3.  Memory storage and core knowledge.
4.  Feedback mechanisms for continuous learning and adjustment.
5.  **Purpose:** This is the crucial element provided by humans, essentially the prompt or goal the agent needs to achieve.

**Current Bottlenecks:** The path to this future faces challenges including data access, context window limitations, compute power, energy consumption, and geopolitical factors.

**How to Get There:** Requires:

*   Real-time, contextual data integration.
*   End-to-end system integration.
*   Standardized data pipelines.
*   Robust prompt engineering (though ideally models will need less).
*   Simple, seamless orchestration of agents.
*   **Nice-to-Haves:** Better LLMs (like Gemini 1.5 Pro mentioned positively), improved context handling (exploring Graph RAG), and potentially a new internet protocol specifically designed for agents.

**Devin's Work: Building Super Agents Today**

Devin's company, CUSTOM AI STUDIO, is actively building these systems using a "Super Agent Architecture." Their approach focuses on making the system scalable via **natural language (prompts)** rather than complex code. Key components they build:

*   **Agentic Database (formerly Master Database):** A centralized data sandbox for the agent, built custom for clients (e.g., using Supabase for data storage, Pinecone for vector embeddings). It syncs unstructured data like emails and conversations to provide context (using RAG, exploring Graph RAG).
*   **Comprehensive Tooling:** End-to-end integration with external software/tools via APIs.
*   **Prompt Playbooks:** Stored and managed in a structured way (e.g., in AirTable), containing the prompts, descriptions, and steps that define the agent's capabilities.

**Mallerie: An Executive Agent Example**

Devin demos "Mallerie," their team's Executive Agent, built using n8n for orchestration and AirTable for configuration/logging.

*   **Components:** Mallerie connects to an Agentic CRM (for contact info), an Agentic Database (for past conversations/context), and uses sub-agents/tools for Calendar actions, Email actions, and Slack messaging.
*   **Workflow (Planned/Ideal):** An input (like an email or Slack message) triggers a **Routing Agent** to read the input and descriptions of available prompts (the "Playbook"). Based on context (potentially pulled from CRM/DB), the Routing Agent selects the most relevant prompt from the Playbook. This selected prompt is then executed by the Super Agent (Mallerie) which accesses the necessary data and tools.
*   **Demo:** Devin shows configuring prompts in AirTable. He then interacts with Mallerie via Slack, showing her pulling up meeting schedules, booking a meeting (demonstrating Calendar tool use), and sending an email to an external contact found in the CRM (demonstrating CRM and Email tool use).
*   **Challenges Highlighted:** The demo subtly shows current UI/UX limitations (identifying users in Slack without mentioning, formatting issues in output, temporary memory buffer issue affecting context). The need for better observability (seeing the workflow run visually) is also mentioned.

**The "Age of the Idea Guy":** Devin believes the increasing ease of building these systems (mentioning platforms like Lovable as impressive examples) means the value shifts towards having clear ideas and visions, as tools make execution more accessible. The interaction with agents will move from "building" to simply "communicating."

**Community and Course Offering:**

Devin announces opening up his community with a new course.

*   **Course Content:** Covers foundational AI concepts (LLMs, agents, chatbots, etc.), technical building blocks (Vector Databases, RAG, APIs, data pipelines, prompt engineering), and critically, **live builds of Super Agents**.
*   **Teaching Style:** Some modules are conceptual talks (like the video), while others (Super Agent builds) are screen recordings with voiceovers showing the step-by-step process using tools like n8n.
*   **Purpose:** To educate others (from laymen to developers) on these concepts and practical building methods, making the complex accessible and showing the real-world application of agentic systems using standard tools. He uses departmental names (e.g., "Sales Super Agent") to help people understand the potential applications, while emphasizing that the core difference between agents is primarily the prompt/playbook, data, and tools.

**Conclusion:**

Devin concludes by reiterating his excitement for Agentic OS as the next leap, moving beyond simple AI automation and singular agents. He believes this future, where personal and business AIs operate autonomously within their data sandboxes and an interconnected web, holds the potential for massive productivity gains (1000x) and a transformation in how businesses operate and how individuals interact with the digital world, enabling a rapid transition from idea to execution.

